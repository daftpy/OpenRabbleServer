# FROM node:20-alpine AS development-dependencies-env
# COPY . /app
# WORKDIR /app
# RUN npm ci

# FROM node:20-alpine AS production-dependencies-env
# COPY ./package.json package-lock.json /app/
# WORKDIR /app
# RUN npm ci --omit=dev

# FROM node:20-alpine AS build-env
# COPY . /app/
# COPY --from=development-dependencies-env /app/node_modules /app/node_modules
# WORKDIR /app
# RUN npm run build

# FROM node:20-alpine
# COPY ./package.json package-lock.json /app/
# COPY --from=production-dependencies-env /app/node_modules /app/node_modules
# COPY --from=build-env /app/build /app/build
# WORKDIR /app
# CMD ["npm", "run", "start"]

# Install all dependencies for build (including dev)
FROM node:20-alpine AS build
WORKDIR /app

# Install deps and build the app
COPY package.json package-lock.json ./
RUN npm ci

COPY . .
RUN npm run build

# Use a lightweight image to serve the app
FROM node:20-alpine AS production
WORKDIR /app

# Install only serve (not your whole dev deps)
RUN npm install -g serve

# Copy build output only
COPY --from=build /app/build ./build

# Expose port for production server
EXPOSE 3000

# Serve the React build with fallback routing (needed for React Router)
CMD ["serve", "-s", "build", "-l", "3000"]
